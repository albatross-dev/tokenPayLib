/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "earlyBirdTransactionsArray".
 */
export type EarlyBirdTransactionsArray =
  | {
      amount?: number | null;
      date?: string | null;
      price?: number | null;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PaymentTypesArray".
 */
export type PaymentTypesArray =
  | {
      acceptedCrypto?: string | null;
      name: string;
      useWhiteListPaymentMethod?: boolean | null;
      whiteList?: (string | Country)[] | null;
      blackList?: (string | Country)[] | null;
      withdrawModality: ('mobile_money' | 'bank_account' | 'credit_card' | 'crypto')[];
      onrampModality: ('mobile_money' | 'credit_card' | 'bank_account')[];
      onrampFee: number;
      onrampMinAmount: number;
      onrampMaxAmount: number;
      type:
        | 'unlimit'
        | 'onramp_money'
        | 'bitcoin_vn'
        | 'bitcoin_vn_helpdesk'
        | 'koywe_helpdesk'
        | 'kotanipay_helpdesk'
        | 'coinhako_helpdesk'
        | 'swypt'
        | 'crypto'
        | 'ovex'
        | 'roma'
        | 'stasis'
        | 'stasis_crypto_only'
        | 'koywe_crypto_only'
        | 'koywe';
      supportDeposit?: boolean | null;
      businessOnly?: boolean | null;
      privateOnly?: boolean | null;
      withdrawOnly?: boolean | null;
      noWithdraw?: boolean | null;
      fiatType?: string | null;
      currencies?:
        | {
            currency?: string | null;
            id?: string | null;
          }[]
        | null;
      minAmount: number;
      maxAmount: number;
      fee: number;
      recommended?: boolean | null;
      id?: string | null;
    }[]
  | null;

export interface Config {
  collections: {
    users: User;
    media: Media;
    uploadMedia: UploadMedia;
    checkoutSession: CheckoutSession;
    vendor: Vendor;
    checkoutConfig: CheckoutConfig;
    currency: Currency;
    languages: Language;
    receiptLanguages: ReceiptLanguage;
    reminderEmailLanguages: ReminderEmailLanguage;
    consumer: Consumer;
    cdnMedia: CdnMedia;
    router: Router;
    documents: Document;
    cryptoTransfer: CryptoTransfer;
    internationalTransactions: InternationalTransaction;
    accountMovement: AccountMovement;
    fiatTransaction: FiatTransaction;
    paymentLinkConfig: PaymentLinkConfig;
    countries: Country;
    transferMethod: TransferMethod;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    mockEmailCredentials: MockEmailCredential;
    welcomeEmail: WelcomeEmail;
    confirmationCodeEmail: ConfirmationCodeEmail;
    receiptEmail: ReceiptEmail;
    reminderEmail: ReminderEmail;
    rewardsEmail: RewardsEmail;
    kycDoneEmail: KycDoneEmail;
    uhuConfig: UhuConfig;
    maintenance: Maintenance;
    uniswapPoolsArbitrum: UniswapPoolsArbitrum;
    uniswapPoolsAvalanche: UniswapPoolsAvalanche;
    uniswapPoolsBase: UniswapPoolsBase;
    uniswapPoolsOptimism: UniswapPoolsOptimism;
    uniswapPoolsPolygon: UniswapPoolsPolygon;
    uniswapPoolsEthereum: UniswapPoolsEthereum;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "uploadMedia".
 */
export interface UploadMedia {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "checkoutSession".
 */
export interface CheckoutSession {
  id: string;
  accessKey?: string | null;
  senderWalletAddress?: string | null;
  isPaymentLink?: boolean | null;
  paymentLinkConfig?: (string | null) | PaymentLinkConfig;
  checkoutConfig?: (string | null) | CheckoutConfig;
  vendor?: (string | null) | Vendor;
  consumer?: (string | null) | Consumer;
  router?: (string | null) | Router;
  approveStableSwapTxHash?: string | null;
  currency: string | Currency;
  swapStableTxHash?: string | null;
  approveUHUSwapTxHash?: string | null;
  paymentTxHash?: string | null;
  paymentContractAddress?: string | null;
  successUrl?: string | null;
  email?: string | null;
  total?: number | null;
  totalUSD?: number | null;
  totalExpected?: number | null;
  customId?: string | null;
  items?:
    | {
        name: string;
        quantity: number;
        price: number;
        id?: string | null;
      }[]
    | null;
  errorMessage?: string | null;
  errorMessageWebhook?: string | null;
  refundTxHash?: string | null;
  paymentStatus?: ('pending' | 'completed' | 'failed' | 'refundPending' | 'refunded') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "paymentLinkConfig".
 */
export interface PaymentLinkConfig {
  id: string;
  uniqueId?: string | null;
  name: string;
  products?:
    | {
        name: string;
        editablePrice?: boolean | null;
        price?: number | null;
        amount?: number | null;
        editableAmount?: boolean | null;
        id?: string | null;
      }[]
    | null;
  maxSessions?: number | null;
  sessionAmount?: number | null;
  limitedSessions?: boolean | null;
  checkoutConfig?: (string | null) | CheckoutConfig;
  vendor?: (string | null) | Vendor;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "checkoutConfig".
 */
export interface CheckoutConfig {
  id: string;
  officialName: string;
  walletAddress: string;
  currency: string | Currency;
  router?: (string | null) | Router;
  accessKey?: string | null;
  language: string | Language;
  themeColor: string;
  logo?: string | CdnMedia | null;
  webhooks?:
    | {
        webhook?: string | null;
        event?: ('payment_success' | 'payment_failed') | null;
        id?: string | null;
      }[]
    | null;
  companyWebsite?: string | null;
  supportWebsite?: string | null;
  gdprURL?: string | null;
  termsURL?: string | null;
  displayAddress1?: string | null;
  displayAddress2?: string | null;
  displayZipCode?: string | null;
  displayCity?: string | null;
  displayCountry?: string | null;
  supportEmail?: string | null;
  supportPhone?: string | null;
  fromUrl?: string | null;
  successUrl?: string | null;
  vendor?: (string | null) | Vendor;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "currency".
 */
export interface Currency {
  id: string;
  symbol?: string | null;
  cCode?: string | null;
  type?: ('fiat' | 'crypto') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "router".
 */
export interface Router {
  id: string;
  routerType?: ('a' | 'b') | null;
  name: string;
  symbol: string;
  cCode: string;
  shredderLimit: number;
  routerAddress: string;
  factoryAddress: string;
  stableCoinAddress: string;
  stableCoinShortName: string;
  stableCoinDecimals: number;
  uhuAddress: string;
  liquidityTokenAddress: string;
  chainId: number;
  fee: number;
  useAfter?: string | null;
  chainShortName: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "languages".
 */
export interface Language {
  id: string;
  language?: string | null;
  code?: string | null;
  flag?: (string | null) | Media;
  gdpr_link_text?: string | null;
  imprint_link_text?: string | null;
  terms_link_text?: string | null;
  payment_button_text?: string | null;
  payment_button_text_processing?: string | null;
  payment_button_text_resume?: string | null;
  insufficient_funds_text?: string | null;
  receipt_text?: string | null;
  pay_in_label?: string | null;
  pay_in_in_label?: string | null;
  items_label?: string | null;
  connect_wallet_text?: string | null;
  transaction_aborted_text?: string | null;
  transaction_success_text?: string | null;
  payment_completed_message?: string | null;
  hash_info_text?: string | null;
  hash_label?: string | null;
  go_back_to_shop_link_text?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cdnMedia".
 */
export interface CdnMedia {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vendor".
 */
export interface Vendor {
  id: string;
  profileLanguage?: ('en' | 'de' | 'fr') | null;
  type: string;
  vendorPhone?: string | null;
  acceptThirdWeb?: boolean | null;
  emailVerified?: boolean | null;
  accountCompleted?: boolean | null;
  verificationCode?: string | null;
  website?: string | null;
  informationStep?:
    | (
        | 'customerType'
        | 'businessInformation'
        | 'companyAddress'
        | 'bankInfo'
        | 'representativeInformation'
        | 'documents'
        | 'askForWallet'
        | 'askForKYC'
        | 'reviewKYC'
        | 'kycOngoing'
        | 'complete'
      )
    | null;
  tkpOnline?: boolean | null;
  tkpPos?: boolean | null;
  tkpCrossBorder?: boolean | null;
  tkpOtherText?: string | null;
  vendorName: string;
  vendorEmail?: string | null;
  vendorPrivacyPolicy?: string | null;
  vendorLegalType?:
    | (
        | 'e_k'
        | 'gbr'
        | 'ohg'
        | 'kg'
        | 'kgaa'
        | 'gmbh_ug_haftungsbeschraenkt'
        | 'ag'
        | 'se'
        | 'gmbh_ug_haftungsbeschraenkt_co_kg'
        | 'gmbh_ug_haftungsbeschraenkt_co_ohg'
        | 'gmbh_ug_haftungsbeschraenkt_co_kgaa'
        | 'ag_co_kg'
        | 'ag_co_ohg'
        | 'ag_co_kgaa'
        | 'se_co_kg'
        | 'se_co_ohg'
        | 'se_co_kgaa'
        | 'stiftung'
        | 'eingetragener_verein'
        | 'ggmbh_gug_haftungsbeschraenkt'
        | 'gag'
        | 'other'
      )
    | null;
  vendorIndustry?: string | null;
  vendorTaxId?: string | null;
  vendorRegister?: string | null;
  vendorRegisterNumber?: string | null;
  vendorFoundingDate?: string | null;
  vendorLastYearRevenue?: number | null;
  vendorEstimatedRevenue?: number | null;
  vendorNetAssets?: number | null;
  vendorSourceOfFunds?: string | null;
  vendorLicenses?: string | null;
  vendorBusinessModel?: string | null;
  iban?: string | null;
  bic?: string | null;
  bankName?: string | null;
  bankAccountCurrency?: string | null;
  bankAddress?: string | null;
  bankCountry?: string | null;
  bankCity?: string | null;
  bankZipCode?: string | null;
  vendorBankStatements?:
    | {
        vendorBankStatement?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  vendorStreetAddress1?: string | null;
  vendorStreetAddress2?: string | null;
  vendorZipCode?: string | null;
  vendorCity?: string | null;
  vendorCountry?: string | null;
  vendorProofOfResidence?:
    | {
        vendorProofOfResidencePage?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  vendorRepresentativeName?: string | null;
  vendorRepresentativeSurname?: string | null;
  vendorRepresentativeEmail?: string | null;
  vendorRepresentativePhone?: string | null;
  vendorRepresentativePosition?: string | null;
  representatives?:
    | {
        vendorRepresentativeName?: string | null;
        vendorRepresentativeSurname?: string | null;
        vendorRepresentativeEmail?: string | null;
        vendorRepresentativePhone?: string | null;
        vendorRepresentativeBirthDate?: string | null;
        vendorRepresentativeAddress?: string | null;
        vendorRepresentativeCity?: string | null;
        vendorRepresentativeZip?: string | null;
        vendorRepresentativeNationality?: string | null;
        vendorRepresentative?: boolean | null;
        vendorRepresentativePowerOfAttorney?: boolean | null;
        vendorRepresentativeShareholder?: boolean | null;
        vendorRepresentativeShares?: number | null;
        vendorRepresentativeTaxId?: string | null;
        vendorRepresentativeId?: string | null;
        id?: string | null;
      }[]
    | null;
  representativeDocs?:
    | {
        representativeDoc?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  representativeAuthorizationDocs?:
    | {
        representativeAuthorizationDoc?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  commercialRegistrations?:
    | {
        commercialRegister?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  registerDocuments?:
    | {
        registerDocument?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  statutes?:
    | {
        statute?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  shareholderDocs?:
    | {
        shareholders?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  taxIdDocs?:
    | {
        taxIdDoc?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  shareholders?:
    | {
        shareholderName?: string | null;
        shareholderSurname?: string | null;
        shareholderAddress?: string | null;
        shareholderCity?: string | null;
        shareholderZip?: string | null;
        shareholderCountry?: string | null;
        id?: string | null;
      }[]
    | null;
  miscellaneousDocs?:
    | {
        misc?: string | Document | null;
        miscText?: string | null;
        id?: string | null;
      }[]
    | null;
  walletAddress?: string | null;
  arePaymentsRequired?: boolean | null;
  bitcoinVNStatus?: ('unverified' | 'verifyIdentity' | 'verifyResidence' | 'in_progress' | 'verified') | null;
  bitcoinVNAPIkey?: string | null;
  bitcoinVNpass?: string | null;
  bitcoinVNIdentityDocs?:
    | {
        bitcoinVNIdentityDoc?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  bitcoinVNAuthDocs?:
    | {
        bitcoinVNAuthDoc?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  bitcoinVNResidencyDocs?:
    | {
        bitcoinVNResidencyDoc?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  currentSwyptOnRampTransaction?: (string | null) | FiatTransaction;
  koyweState?: ('unverified' | 'in_progress' | 'verified') | null;
  ovexState?: ('unverified' | 'in_progress' | 'verified') | null;
  currentOvexTransaction?: (string | null) | FiatTransaction;
  ovexPurpose?: string | null;
  romaState?: ('unverified' | 'in_progress' | 'verified') | null;
  currentRomaTransaction?: (string | null) | FiatTransaction;
  bitcoinVNHelpdeskState?: ('unverified' | 'in_progress' | 'verified') | null;
  currentBitcoinVNHelpdeskTransaction?: (string | null) | FiatTransaction;
  bitcoinVNDocs?:
    | {
        bitcoinVNDoc?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  koyweHelpdeskState?: ('unverified' | 'in_progress' | 'verified') | null;
  currentKoyweHelpdeskTransaction?: (string | null) | FiatTransaction;
  koyweVolume?: string | null;
  koyweComment?: string | null;
  kotaniPayHelpdeskState?: ('unverified' | 'in_progress' | 'verified') | null;
  currentKotaniPayHelpdeskTransaction?: (string | null) | FiatTransaction;
  coinhakoHelpdeskState?: ('unverified' | 'in_progress' | 'verified') | null;
  currentCoinhakoHelpdeskTransaction?: (string | null) | FiatTransaction;
  stasisRepresentative?: string | null;
  stasisVolume?: string | null;
  stasisRepresentativeIdentityType?: ('Passport' | 'National ID' | 'Driver license' | 'Residence permit') | null;
  stasisRepresentativeProofOfIdentity?:
    | {
        representativeProofOfIdentityPage?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  stasisProofOfResidence?:
    | {
        stasisProofOfResidencePage?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  stasisClientUUID?: string | null;
  stasisKYCUUID?: string | null;
  stasisKYCLevelUUID?: string | null;
  stasisKYBStep?:
    | ('createStasisAccount' | 'startKYB' | 'livenessCheck' | 'companyInfo' | 'kybOngoing' | 'complete')
    | null;
  stasisKYBStatus?: string | null;
  euroEAccount?: string | null;
  euroEWalletAccount?: string | null;
  euroEWallet?: string | null;
  euroEBankAccount?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents".
 */
export interface Document {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fiatTransaction".
 */
export interface FiatTransaction {
  id: string;
  vendor?: (string | null) | Vendor;
  consumer?: (string | null) | Consumer;
  transactionDetails?: string | null;
  requestMessageId?: string | null;
  requestChatId?: string | null;
  partner?:
    | (
        | 'unlimit'
        | 'onramp_money'
        | 'bitcoin_vn'
        | 'bitcoin_vn_helpdesk'
        | 'swypt'
        | 'koywe'
        | 'crypto'
        | 'ovex'
        | 'roma'
        | 'stasis'
        | 'stasis_crypto_only'
        | 'koywe_crypto_only'
        | 'koywe_helpdesk'
        | 'kotanipay_helpdesk'
        | 'coinhako_helpdesk'
      )
    | null;
  currencyName?: string | null;
  targetCountry?: string | null;
  currencyDecimals?: number | null;
  burnAddress?: string | null;
  currency?: string | null;
  UUID?: string | null;
  amount?: number | null;
  fee?: number | null;
  exchangeRate?: number | null;
  finalamount?: number | null;
  finalCurrency?: string | null;
  fromNetwork?: string | null;
  toAccountUUID?: string | null;
  toAccountIdentifier?: string | null;
  toAccountReference?: string | null;
  toAccountCode?: string | null;
  toAccountBankName?: string | null;
  transactionHash?: string | null;
  toNetwork?: string | null;
  endUserUUID?: string | null;
  type?: ('Withdraw' | 'Deposit') | null;
  status?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "consumer".
 */
export interface Consumer {
  id: string;
  earlyBirdTransactions?: EarlyBirdTransactionsArray;
  referenceWallet?: string | null;
  requestingWallet?: boolean | null;
  automaticReinvest?: boolean | null;
  emailVerified?: boolean | null;
  accountCompleted?: boolean | null;
  verificationCode?: string | null;
  type: string;
  receiveEmailNotifications?: boolean | null;
  uhutokenDashboard?: boolean | null;
  legacy?: boolean | null;
  legacyInfo?: {
    legacyId?: string | null;
    solanaWalletAddress?: string | null;
  };
  lastAddLiquidity?: string | null;
  lastRemoveLiquidity?: string | null;
  kycStatus?: ('notStarted' | 'pending' | 'approved' | 'rejected') | null;
  livenessStatus?:
    | (
        | 'notStarted'
        | 'pending'
        | 'approved'
        | 'resubmission_requested'
        | 'review'
        | 'declined'
        | 'expired'
        | 'abandoned'
      )
    | null;
  informationStep?:
    | (
        | 'welcome'
        | 'askForWallet'
        | 'personalInformation'
        | 'addressInformation'
        | 'bankInformation'
        | 'livenessCheck'
        | 'kycOngoing'
        | 'complete'
      )
    | null;
  useTWWallet?: boolean | null;
  name?: string | null;
  surname?: string | null;
  phone?: string | null;
  birthday?: string | null;
  nationality?: string | null;
  country?: string | null;
  taxId?: string | null;
  documentId?: string | null;
  isPep?: boolean | null;
  sourceOfFunds?: string | null;
  billingAddress?: {
    name?: string | null;
    name2?: string | null;
    street?: string | null;
    street2?: string | null;
    city?: string | null;
    postalCode?: string | null;
    country?: string | null;
    region?: string | null;
  };
  iban?: string | null;
  bic?: string | null;
  bitcoinVNStatus?: ('unverified' | 'verifyIdentity' | 'verifyResidence' | 'in_progress' | 'verified') | null;
  bitcoinVNAPIkey?: string | null;
  bitcoinVNIdentityDocs?:
    | {
        bitcoinVNIdentityDoc?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  bitcoinVNAuthDocs?:
    | {
        bitcoinVNAuthDoc?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  bitcoinVNResidencyDocs?:
    | {
        bitcoinVNResidencyDoc?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  bitcoinVNpass?: string | null;
  currentSwyptOnRampTransaction?: (string | null) | FiatTransaction;
  ovexState?: ('unverified' | 'in_progress' | 'verified') | null;
  currentOvexTransaction?: (string | null) | FiatTransaction;
  ovexTransactionCount?: string | null;
  ovexVolume?: string | null;
  romaState?: ('unverified' | 'in_progress' | 'verified') | null;
  currentRomaTransaction?: (string | null) | FiatTransaction;
  bitcoinVNHelpdeskState?: ('unverified' | 'in_progress' | 'verified') | null;
  currentBitcoinVNHelpdeskTransaction?: (string | null) | FiatTransaction;
  bitcoinVNDocs?:
    | {
        bitcoinVNDoc?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  koyweHelpdeskState?: ('unverified' | 'in_progress' | 'verified') | null;
  currentKoyweHelpdeskTransaction?: (string | null) | FiatTransaction;
  koyweVolume?: string | null;
  koyweComment?: string | null;
  kotaniPayHelpdeskState?: ('unverified' | 'in_progress' | 'verified') | null;
  currentKotaniPayHelpdeskTransaction?: (string | null) | FiatTransaction;
  kotaniTransactionCount?: string | null;
  kotaniVolume?: string | null;
  coinhakoHelpdeskState?: ('unverified' | 'in_progress' | 'verified') | null;
  currentCoinhakoHelpdeskTransaction?: (string | null) | FiatTransaction;
  stasisRepresentative?: string | null;
  stasisVolume?: string | null;
  stasisRepresentativeIdentityType?: ('Passport' | 'National ID' | 'Driver license' | 'Residence permit') | null;
  stasisRepresentativeProofOfIdentity?:
    | {
        representativeProofOfIdentityPage?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  stasisProofOfResidence?:
    | {
        stasisProofOfResidencePage?: string | Document | null;
        id?: string | null;
      }[]
    | null;
  stasisClientUUID?: string | null;
  stasisKYCUUID?: string | null;
  stasisKYCLevelUUID?: string | null;
  stasisKYBStep?:
    | ('createStasisAccount' | 'startKYB' | 'livenessCheck' | 'companyInfo' | 'kybOngoing' | 'complete')
    | null;
  stasisKYBStatus?: string | null;
  euroEAccount?: string | null;
  euroEWalletAccount?: string | null;
  euroEWallet?: string | null;
  euroEBankAccount?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "receiptLanguages".
 */
export interface ReceiptLanguage {
  id: string;
  language?: string | null;
  code?: string | null;
  flag?: (string | null) | Media;
  title?: string | null;
  subTitle?: string | null;
  transaction_hash_label?: string | null;
  totalText?: string | null;
  supportText?: string | null;
  thankYouText?: string | null;
  hashText?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reminderEmailLanguages".
 */
export interface ReminderEmailLanguage {
  id: string;
  language?: string | null;
  code?: string | null;
  flag?: (string | null) | Media;
  subject?: string | null;
  title?: string | null;
  subTitle?: string | null;
  linkText?: string | null;
  supportText?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cryptoTransfer".
 */
export interface CryptoTransfer {
  id: string;
  vendor?: (string | null) | Vendor;
  consumer?: (string | null) | Consumer;
  amount?: number | null;
  currency?: string | null;
  currencyName?: string | null;
  currencyDecimals?: number | null;
  transactionHash?: string | null;
  receivingWallet?: string | null;
  sendingWallet?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "internationalTransactions".
 */
export interface InternationalTransaction {
  id: string;
  vendor?: (string | null) | Vendor;
  link?: (string | null) | AccountMovement;
  type?: ('fiat' | 'crypto') | null;
  router?: (string | null) | Router;
  shredSize?: number | null;
  shredCount?: number | null;
  shardList?:
    | {
        txHash?: string | null;
        confirmed?: boolean | null;
        id?: string | null;
      }[]
    | null;
  amount?: number | null;
  currency?: string | null;
  currencyName?: string | null;
  currencyDecimals?: number | null;
  transactionHash?: string | null;
  receivingWallet?: string | null;
  sendingWallet?: string | null;
  status?: ('pending' | 'completed' | 'failed') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "accountMovement".
 */
export interface AccountMovement {
  id: string;
  vendor?: (string | null) | Vendor;
  consumer?: (string | null) | Consumer;
  positive: boolean;
  link:
    | {
        relationTo: 'internationalTransactions';
        value: string | InternationalTransaction;
      }
    | {
        relationTo: 'cryptoTransfer';
        value: string | CryptoTransfer;
      }
    | {
        relationTo: 'fiatTransaction';
        value: string | FiatTransaction;
      }
    | {
        relationTo: 'checkoutSession';
        value: string | CheckoutSession;
      };
  amount: number;
  currency: string;
  currencyName: string;
  currencyDecimals: number;
  chainId: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "countries".
 */
export interface Country {
  id: string;
  countryCode?: string | null;
  useWhiteList?: boolean | null;
  receivingFromCountryWhiteList?: (string | Country)[] | null;
  receivingFromCountryBlackList?: (string | Country)[] | null;
  countryInfo: {
    name?: string | null;
    flag?: (string | null) | CdnMedia;
    background?: (string | null) | CdnMedia;
    currency?: string | null;
    population?: number | null;
    capital?: string | null;
    gdp?: string | null;
    fact?: string | null;
    region: 'europe' | 'asia' | 'north_america' | 'south_america' | 'africa' | 'australia_oceania';
  };
  preferredStableCoin?: string | null;
  paymentTypes?: PaymentTypesArray;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transferMethod".
 */
export interface TransferMethod {
  id: string;
  key: string;
  name: string;
  currencies: {
    currency?: string | null;
    id?: string | null;
  }[];
  minAmount: number;
  fee: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user:
    | {
        relationTo: 'users';
        value: string | User;
      }
    | {
        relationTo: 'vendor';
        value: string | Vendor;
      }
    | {
        relationTo: 'consumer';
        value: string | Consumer;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mockEmailCredentials".
 */
export interface MockEmailCredential {
  id: string;
  email?: string | null;
  password?: string | null;
  timestamp?: number | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "welcomeEmail".
 */
export interface WelcomeEmail {
  id: string;
  de: {
    subject?: string | null;
    html?: string | null;
  };
  en: {
    subject?: string | null;
    html?: string | null;
  };
  fr: {
    subject?: string | null;
    html?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "confirmationCodeEmail".
 */
export interface ConfirmationCodeEmail {
  id: string;
  de: {
    subject?: string | null;
    html?: string | null;
  };
  en: {
    subject?: string | null;
    html?: string | null;
  };
  fr: {
    subject?: string | null;
    html?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "receiptEmail".
 */
export interface ReceiptEmail {
  id: string;
  html?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reminderEmail".
 */
export interface ReminderEmail {
  id: string;
  html?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rewardsEmail".
 */
export interface RewardsEmail {
  id: string;
  html?: string | null;
  subject?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "kycDoneEmail".
 */
export interface KycDoneEmail {
  id: string;
  html?: string | null;
  subject?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "uhuConfig".
 */
export interface UhuConfig {
  id: string;
  uhuEuroPrice?: number | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "maintenance".
 */
export interface Maintenance {
  id: string;
  common: {
    crossborder?: {
      conversionDialog?: boolean | null;
    };
  };
  consumer: {
    signin?: {
      loginForm?: boolean | null;
    };
    crossborder?: {
      page?: boolean | null;
    };
    payments?: {
      statistics?: boolean | null;
      transactionList?: boolean | null;
      export?: boolean | null;
    };
    main?: {
      balances?: boolean | null;
    };
    uhutoken?: {
      currentPeriod?: boolean | null;
      lastPeriod?: boolean | null;
    };
  };
  dashboard: {
    withdraw?: {
      page?: boolean | null;
    };
    deposit?: {
      page?: boolean | null;
    };
    crossborder?: {
      page?: boolean | null;
    };
    paymentLinks?: {
      page?: boolean | null;
    };
    signin?: {
      loginForm?: boolean | null;
    };
    dashboard?: {
      revenueToday?: boolean | null;
      revenue?: boolean | null;
      payments?: boolean | null;
      customers?: boolean | null;
    };
    payments?: {
      statistics?: boolean | null;
      transactionList?: boolean | null;
      export?: boolean | null;
    };
    customers?: {
      selection?: boolean | null;
      customerList?: boolean | null;
    };
    wallet?: {
      balanceSummary?: boolean | null;
      balances?: boolean | null;
      income?: boolean | null;
      incomeHistory?: boolean | null;
      expenses?: boolean | null;
      expensesHistory?: boolean | null;
      withdrawal?: boolean | null;
      withdrawalHistory?: boolean | null;
      cross_border_payment?: boolean | null;
      cross_border_paymentHistory?: boolean | null;
      deposit?: boolean | null;
      depositHistory?: boolean | null;
      send?: boolean | null;
      sendHistory?: boolean | null;
      receive?: boolean | null;
      receivePanel?: boolean | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "uniswapPoolsArbitrum".
 */
export interface UniswapPoolsArbitrum {
  id: string;
  pools?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "uniswapPoolsAvalanche".
 */
export interface UniswapPoolsAvalanche {
  id: string;
  pools?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "uniswapPoolsBase".
 */
export interface UniswapPoolsBase {
  id: string;
  pools?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "uniswapPoolsOptimism".
 */
export interface UniswapPoolsOptimism {
  id: string;
  pools?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "uniswapPoolsPolygon".
 */
export interface UniswapPoolsPolygon {
  id: string;
  pools?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "uniswapPoolsEthereum".
 */
export interface UniswapPoolsEthereum {
  id: string;
  pools?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}